"use strict";(self.webpackChunknathaniel_vaur_henel_github_io=self.webpackChunknathaniel_vaur_henel_github_io||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2024/02/test","metadata":{"permalink":"/blog/2024/02/test","source":"@site/blog/2024/02/test.md","title":"Test early","description":"ceci est un test de publication en avance","date":"2024-03-15T00:00:00.000Z","formattedDate":"15 mars 2024","tags":[{"label":"test","permalink":"/blog/tags/test"}],"readingTime":0.04,"hasTruncateMarker":false,"authors":[{"name":"Nathaniel Vaur Henel","title":"Tech Lead, D\xe9veloppeur s\xe9nior, formateur et cr\xe9ateur de contenu","url":"https://github.com/Nathaniel-Vaur-Henel","imageURL":"https://github.com/Nathaniel-Vaur-Henel.png","key":"nvh"}],"frontMatter":{"title":"Test early","authors":"nvh","tags":["test"],"enableComments":false,"date":"2024-03-15T00:00:00.000Z"},"unlisted":false,"nextItem":{"title":"D\xe9buter avec Spring gr\xe2ce \xe0 Spring Initializr","permalink":"/blog/begin-spring"}},"content":"ceci est un test de publication en avance"},{"id":"/begin-spring","metadata":{"permalink":"/blog/begin-spring","source":"@site/blog/2024/02/2024-02-15.begin_spring.md","title":"D\xe9buter avec Spring gr\xe2ce \xe0 Spring Initializr","description":"Ce n\'est pas toujours facile de se lancer avec Spring quand on est un d\xe9veloppeur Java d\xe9butant. De premier abord aride avec sa r\xe9putation de mastodonte compliqu\xe9 \xe0 appr\xe9hender, Spring est pourtant un framework superstar dans la communaut\xe9 java, et ce n\'est pas sans raison.","date":"2024-02-15T00:00:00.000Z","formattedDate":"15 f\xe9vrier 2024","tags":[{"label":"Java","permalink":"/blog/tags/java"},{"label":"Spring","permalink":"/blog/tags/spring"},{"label":"langage","permalink":"/blog/tags/langage"},{"label":"d\xe9veloppement","permalink":"/blog/tags/developpement"},{"label":"tuto","permalink":"/blog/tags/tuto"}],"readingTime":14.63,"hasTruncateMarker":true,"authors":[{"name":"Nathaniel Vaur Henel","title":"Tech Lead, D\xe9veloppeur s\xe9nior, formateur et cr\xe9ateur de contenu","url":"https://github.com/Nathaniel-Vaur-Henel","imageURL":"https://github.com/Nathaniel-Vaur-Henel.png","key":"nvh"}],"frontMatter":{"slug":"/begin-spring","title":"D\xe9buter avec Spring gr\xe2ce \xe0 Spring Initializr","authors":"nvh","tags":["Java","Spring","langage","d\xe9veloppement","tuto"],"enableComments":true},"unlisted":false,"prevItem":{"title":"Test early","permalink":"/blog/2024/02/test"}},"content":"Ce n\'est pas toujours facile de se lancer avec Spring quand on est un d\xe9veloppeur Java d\xe9butant. De premier abord aride avec sa r\xe9putation de mastodonte compliqu\xe9 \xe0 appr\xe9hender, Spring est pourtant un framework superstar dans la communaut\xe9 java, et ce n\'est pas sans raison.  \\nAfin de faciliter ta prise en main de Spring, je vais te pr\xe9senter comment il fonctionne et te donner les clefs qui te permettront de te lancer tout en douceur.\\n\\n\x3c!--truncate--\x3e\\n\\n\\n:::warning\\n\\nJe vais consid\xe9rer que tu as d\xe9j\xe0 des bases en Java. Si ce n\'est pas le cas, je te conseille de commencer par l\xe0. Tu trouveras plein de ressources sur le net pour apprendre Java. J\'ai toujours aim\xe9 les cours d\'[OpenClassrooms](https://openclassrooms.com/fr/courses/6173501-apprenez-a-programmer-en-java), mais il y en a plein d\'autres. Et tu pourras trouver quelques conseils sur ce site.\\n\\n:::\\n\\n## Spring, un framework Java incontournable\\n\\nSpring, c\'est de la magie : ce framework sait faire plein de choses tout seul, sans que l\'on ait besoin de comprendre toutes les m\xe9caniques sous-jacentes. Un avantage certes, mais qui peut rendre parfois son usage d\xe9routant, voire complexe, quand le framework s\'emballe et te casse ta belle appli sans que tu ne comprennes pourquoi. [En mode les balais de Fantasia qui se mettent \xe0 danser tout seul... et inondent finalement ta baraque](https://youtu.be/snB8u_G3jVI?feature=shared&t=374).\\n\\n### Spring, le framework pour tous\\n\\nSpring est un framework opensource Java qui permet de d\xe9velopper plus rapidement des applications complexes et de qualit\xe9. Il est tr\xe8s populaire et tr\xe8s utilis\xe9 dans le monde professionnel au point o\xf9 l\'on peut dire qu\'on ne code plus en Java, mais en Spring. C\'est une v\xe9ritable comp\xe9tence clef qui peut ouvrir les portes de beaux projets, mais surtout en fermer si on ne le ma\xeetrise pas suffisamment.\\n\\nDerni\xe8rement, j\'ai abord\xe9 le sujet de Spring avec des d\xe9veloppeurs juniors que j\'accompagne. Comme ils sortent d\'\xe9cole et n\'ont pas creus\xe9 la question de ce framework, je leur ai propos\xe9, afin d\'augmenter leurs comp\xe9tences, de cr\xe9er un projet perso en Spring. Leur r\xe9action a \xe9t\xe9 unanime :  \\n\\"C\'est trop gros, trop compliqu\xe9, c\'est pour des grosses applis.\\"  \\nAlors... c\'est pas faux. Je me souviens moi-m\xeame avoir eu des difficult\xe9s \xe0 m\'y mettre lorsque je n\'\xe9tais encore qu\'un d\xe9butant.\\nEt pourtant, aujourd\'hui, je ne peux plus m\'en passer. Spring est devenu un outil indispensable dans mon quotidien de d\xe9veloppeur Java.  \\n\\nJe te propose de d\xe9mystifier Spring et de te montrer comment tu peux t\'en servir pour cr\xe9er des applications, quelles que soient la taille et l\'ambition de ton projet.\\n\\nUne fois les concepts de base assimil\xe9s, Spring est finalement facile \xe0 utiliser, \xe0 condition d\'y aller doucement et d\'avoir d\xe9j\xe0 quelques bases en Java. Donc go, go, go ! M\xeame \xe0 la maison, tu peux springer\xa9 (il faut que je le d\xe9pose \xe7a...) \xe0 volont\xe9.\\n\\n### Attention \xe0 ne pas confondre Spring ou Spring Boot\\n\\n**Spring** est un framework tr\xe8s modulaire. Il est compos\xe9 de plusieurs modules, qui peuvent \xeatre utilis\xe9s ind\xe9pendamment les uns des autres. \\n\\n**Spring Boot** est un module de Spring qui permet de cr\xe9er et de configurer plus facilement des applications Spring. Il contient aussi un serveur d\'application embarqu\xe9 et des outils pour faciliter le d\xe9veloppement (rechargement \xe0 chaud, gestion des d\xe9pendances, etc).\\n\\nDonc, tu peux faire du Spring sans Spring Boot, mais tu ne peux pas faire du Spring Boot sans Spring. En fait, Spring Boot est une surcouche de Spring qui te permet de te concentrer sur le d\xe9veloppement de ton application sans te soucier de la configuration de Spring. C\'est pour \xe7a que je te conseille de commencer par Spring Boot si tu d\xe9butes avec Spring. Tu verras, c\'est plus simple et plus rapide.\\n\\n:::info Le moment mn\xe9motechnique\\n\\nSpring est comme un dojo traditionnel d\'arts martiaux, offrant une profondeur d\'apprentissage et de pratique. En revanche, Spring Boot est comme un entra\xeenement en plein air, ax\xe9 sur la simplicit\xe9 et l\'efficacit\xe9 pour une progression rapide.\\n\\n:::\\n\\n### Spring, c\'est quoi ?\\n\\nSpring est un sac de grain de caf\xe9... Attends, je t\'explique...\\n(Roulement de tambours pour le moment culture g\xe9n\xe9rale.)\\nSi tu ne le sais pas, **java** est un mot anglais pour caf\xe9. C\'est pour \xe7a que le logo de Java (note la majuscule) est une tasse de caf\xe9 fumante _(AAAAHHHH !!!)_ et qu\'en Java, on a des **Beans**, des haricots ou des grains de caf\xe9 _(OOOHHHH !!!)_. \\nEt comme Spring est un conteneur de Beans, on peut dire que c\'est un sac de grain de caf\xe9.\\n\\nGarde cette image en t\xeate, \xe7a devrait te permettre de mieux comprendre la suite.\\n\\nEn fait, c\'est m\xeame encore mieux :  \\n- Tu d\xe9cris tes Beans \xe0 Spring.\\n- Il te les fabrique.\\n- Il te les range sur une \xe9tag\xe8re, pr\xeats \xe0 servir.\\n\\nSpring initialise tes Beans, les range dans un conteneur, et te les fournit quand tu en as besoin. Et il fait \xe7a tout seul. Et \xe7a, c\'est le premier gros point fort de Spring et \xe7a s\'appelle l\'inversion de contr\xf4le (ou IoC pour les intimes). C\'est le premier concept cl\xe9s de Spring.\\n\\nLe deuxi\xe8me concept clef de Spring, c\'est qu\'il utilise la POO (Programmation Orient\xe9e Objet) comme un \xe9l\xe9ment central. \xc0 un point qui d\xe9fie l\'imagination d\'un d\xe9butant. Je ferai peut-\xeatre un article \xe0 ce sujet. Spring utilise la POO pour faire des trucs tout seul, comme g\xe9n\xe9rer des classes enti\xe8res \xe0 partir d\'une simple annotation.\\n\\nEn parlant annotations, c\'est le c\u0153ur de Spring. Tu vas voir, c\'est super pratique. Tu \xe9cris une annotation au-dessus d\'une classe ou d\'une m\xe9thode, et Spring fait le reste. C\'est magique. Litt\xe9ralement. Avec Spring, quand on me demande \\"comment on fait \xe7a ?\\", j\'aime r\xe9pondre :\\n> Il a une annotation pour \xe7a.\\n\\nBref, l\'abstraction de Spring est tellement puissante que tu n\'as pas besoin de comprendre comment \xe7a marche pour l\'utiliser. Mais c\'est quand m\xeame mieux si tu comprends quand-m\xeame. C\'est le troisi\xe8me concept clef de Spring.\\n\\n:::info Le moment mn\xe9motechnique\\n\\nSpring, c\'est un sac de grain de caf\xe9, avec un robot qui te les pr\xe9pare et te les sert quand tu en as besoin. Et la t\xe9l\xe9commande du robot, ce sont les annotations.\\n\\n:::\\n\\nSpring est compos\xe9 de plusieurs modules, une vingtaine, mais pour d\xe9buter, je te conseille de commencer par l\xe0 :\\n\\n- **Spring Boot** : c\'est le module qui permet de cr\xe9er des applications Spring autonomes. Il contient aussi un serveur d\'application embarqu\xe9 (Tomcat, Jetty ou Undertow), et des outils pour faciliter le d\xe9veloppement (rechargement \xe0 chaud, etc).\\n- **Spring Data** : c\'est le module qui permet de manipuler des donn\xe9es dans des bases de donn\xe9es relationnelles ou NoSQL.\\n- **Spring Web Services** : c\'est le module qui permet de d\xe9velopper des applications web services.\\n- **Spring Test** : c\'est le module qui permet de faire des tests unitaires et d\'int\xe9gration.\\n\\n:::note\\n\\nSi tu veux te lancer dans la d\xe9couverte des autres modules, je te conseille tout simplement la (sacro-sainte) [doc](https://docs.spring.io/spring-framework/docs/4.0.x/spring-framework-reference/html/overview.html)\\n\\n:::\\n\\n:::warning Attention aux Chocabugs !\\n\\n> Spring a un grand pouvoir et un grand pouvoir implique de grandes responsabilit\xe9s.\\n\\nSpring, c\'est de la magie. Il fait des trucs tout seul et tu ne vas pas toujours comprendre comment il fait. Et c\'est \xe0 ce moment que tu dois creuser un peu afin de comprendre les m\xe9canismes sous-jacents. Pourquoi ? Parce que sinon, tu vas te retrouver avec des bugs incompr\xe9hensibles. Et \xe7a, c\'est pas cool. Surtout si tu rajoutes Hibernate et Lombok, et d\'autres encore, qui sont aussi des frameworks qui font des trucs tout seul. \xc0 coup d\'annotations. Et qui sont int\xe9gr\xe9s \xe0 Spring Boot.\\n\\nEt paf, \xe7a fait des Chocabugs\xa9.\\n\\n:::\\n\\n## Initializr : le g\xe9n\xe9rateur de projet Spring\\n\\n[Spring Initializr](https://start.spring.io/) est l\'outil de r\xe9f\xe9rence pour utiliser Spring Boot et pour cause, c\'est l\'outil officiel de Spring pour cr\xe9er des projets Spring Boot. C\'est un site qui te permet de cr\xe9er un projet Spring Boot en quelques clics. \\nC\'est tr\xe8s pratique pour commencer. Tu choisis les d\xe9pendances dont tu as besoin, et il te g\xe9n\xe8re un projet pr\xeat \xe0 l\'emploi.\\n\\nNous allons donc cr\xe9er un projet Spring Boot avec Spring Initializr. \\n\\n### Avant de commencer, pr\xe9sentation des d\xe9pendances\\n\\nAvant de nous lancer dans le vif du sujet, je te pr\xe9sente quelques d\xe9pendances de bases, je les mets dans tous mes projets ou presque :\\n\\n- **Spring Web** : c\'est la d\xe9pendance qui permet de d\xe9velopper des applications web.\\n- **Spring Data JPA** : c\'est la d\xe9pendance qui permet de manipuler des donn\xe9es dans une base de donn\xe9es relationnelle.\\n- **Spring Boot Test** : c\'est la d\xe9pendance qui permet de faire des tests unitaires et d\'int\xe9gration. Tu n\'as rien \xe0 faire, Spring Initializr ajoute d\xe9j\xe0 cette d\xe9pendance.\\n- **Lombok** : c\'est la d\xe9pendance qui permet de g\xe9n\xe9rer du code automatiquement. C\'est tr\xe8s pratique pour \xe9viter de r\xe9p\xe9ter du code.\\n- **Spring Boot DevTools** : c\'est la d\xe9pendance qui permet de recharger \xe0 chaud ton application. C\'est tr\xe8s pratique pour gagner du temps.\\n\\nLibre \xe0 toi d\'en choisir d\'autres. Tu peux m\xeame en ajouter d\'autres plus tard. C\'est \xe7a qui est bien avec Spring : tu peux commencer petit et ajouter des choses au fur et \xe0 mesure que ton projet grandit.\\n\\nPetit bonus : Si tu veux une base de donn\xe9es facile et rapide \xe0 mettre en place, tu peux ajouter la d\xe9pendance **H2 Database**. C\'est une base de donn\xe9es relationnelle en m\xe9moire. C\'est tr\xe8s pratique pour le d\xe9marrage d\'une appli. Et tu peux aussi la mettre en fichier pour conserver les donn\xe9es entre deux lancements de l\'appli. Et quand tu passeras en production, tu pourras facilement changer pour une autre base de donn\xe9es. H2 m\xe9riterait un article \xe0 lui tout seul, mais pour l\'instant, je te conseille de l\'ajouter.\\n\\n### Cr\xe9er son premier projet avec Spring Initializr \xe9tape par \xe9tape\\n\\nC\'est enfin l\'heure du tuto !\\n\\nC\'est le moment d\'aller sur [Spring Initializr](https://start.spring.io/) pour cr\xe9er ton projet.\\nPour ce faire, tu dois d\'abord remplir les champs suivants :\\n\\n- **Project** : c\'est le type de projet. Tu peux choisir Maven ou Gradle. Moi, j\'ai l\'habitude de Maven, donc je choisis `Maven`.\\n- **Language** : c\'est le langage de programmation. Tu peux choisir Java, Kotlin ou Groovy. Moi, je choisis `Java`.\\n- **Spring Boot\\n  ** : c\'est la version de Spring Boot. Tu peux choisir la derni\xe8re version stable. Moi, je choisis la version `3.2.2`.\\n- **Project Metadata** : ce sont les informations sur ton projet. Tu peux mettre ce que tu veux. Moi, je mets :\\n  - **Group** : `fr.nvh`, c\'est le nom racine de tous mes packages de toutes mes side projects.\\n  - **Artifact** : `begin-spring`, c\'est le nom de code du projet.\\n  - **Name** : `D\xe9bute avec Spring`, c\'est le nom du projet.\\n  - **Description** : `Un side project pour d\xe9buter avec Spring`, c\'est la description du projet.\\n  - **Package name** : `fr.nvh.begin.spring`, c\'est le nom du package racine du projet.\\n  - **Packaging** : `jar`, c\'est le type de package g\xe9n\xe9r\xe9, tant que tu ne passes pas en production, \xe7a n\'a pas d\'importance.\\n  - **Java** : 21, c\'est la version de Java, tu peux mettre la derni\xe8re version stable.\\n\\nEt voil\xe0 :\\n![spring_initializer_basics.png](begin_spring/spring_initializer_basics.png)\\n\\n:::info\\n\\nTu pourras changer toutes ces infos plus tard dans ton fichier de configuration `pom.xml` ou `build.gradle`.\\n\\n::: \\n\\nVoil\xe0 pour le travail de base.  \\nMaintenant, il faut ajouter les d\xe9pendances.  \\nPour cela, tu cliques sur le bouton **Add Dependencies** et tu ajoutes les d\xe9pendances dont je t\'ai parl\xe9 plus haut. Tu peux aussi ajouter d\'autres d\xe9pendances si tu veux.\\n\\nPour rappel :\\n\\n- **Spring Web** : c\'est la d\xe9pendance qui permet de d\xe9velopper des applications web.\\n- **Spring Data JPA** : c\'est la d\xe9pendance qui permet de manipuler des donn\xe9es dans une base de donn\xe9es relationnelle.\\n- **Spring Boot Test** : c\'est la d\xe9pendance qui permet de faire des tests unitaires et d\'int\xe9gration.\\n- **Lombok** : c\'est la d\xe9pendance qui permet de g\xe9n\xe9rer du code automatiquement. C\'est tr\xe8s pratique pour \xe9viter de r\xe9p\xe9ter du code.\\n- **Spring Boot DevTools** : c\'est la d\xe9pendance qui permet de recharger \xe0 chaud ton application. C\'est tr\xe8s pratique pour gagner du temps.\\n- **H2 Database** : c\'est la d\xe9pendance qui permet d\'ajouter une base de donn\xe9es relationnelle en m\xe9moire.\\n\\n![spring_initializer_dependencies.png](begin_spring/spring_initializer_dependencies.png)\\n\\nClic sur le bouton **Generate** et tu auras un fichier zip avec ton projet Spring Boot. D\xe9compresse-le et ouvre-le dans ton IDE pr\xe9f\xe9r\xe9.\\n\\nFaisons-le !\\n\\nComme je suis sympa, je te mets le lien vers le projet que j\'ai cr\xe9\xe9 : [Spring Initializr - begin-spring](https://start.spring.io/#!type=maven-project&language=java&platformVersion=3.2.2&packaging=jar&jvmVersion=21&groupId=fr.nvh&artifactId=begin-spring&name=D%C3%A9bute%20avec%20Spring&description=Cr%C3%A9e%20un%20projet%20facilement&packageName=fr.nvh.begin.spring&dependencies=devtools,lombok,web,data-jpa,h2)\\n\\n:::info\\n\\nLe bouton **Explore** te permet de voir le projet que tu as cr\xe9\xe9 avant de la t\xe9l\xe9charger. \\n\\n:::\\n\\n### Lancement de l\'application du projet g\xe9n\xe9r\xe9\\n\\nOuvre ton projet dans ton IDE pr\xe9f\xe9r\xe9. \\n\\n:::info\\n\\nMoi, j\'utilise [IntelliJ IDEA](https://www.jetbrains.com/fr-fr/idea/), mais tu peux utiliser celui que tu veux. La version Community d\'IntelliJ IDEA est gratuite et suffisante pour commencer. Je pourrais \xe9crire des tonnes d\'articles sur IntelliJ IDEA, et je le ferai prochainement, mais pour l\'instant, revenons \xe0 Spring.\\n\\n:::\\n\\nAlors \xe0 quoi \xe7a ressemble ? \\n- Un fichier de configuration `pom.xml` (ou `build.gradle`).\\n- Un fichier `DebuteAvecSpringApplication.java` dans le package `fr.nvh.begin.spring`. C\'est la classe de d\xe9marrage de ton application. \\n- Un fichier `application.properties` dans le dossier `src/main/resources`. C\'est le fichier de configuration de ton application. \\n- Un fichier `DebuteAvecSpringApplication.java` dans le package `fr.nvh.begin.spring`. C\'est le fichier de test de ton application.\\n- Un fichier `HELP.md` qui contient des informations et des guides sur Spring.\\n\\nIgnore le reste pour l\'instant.\\n\\nBon, commen\xe7ons par le commencement. Le fichier `pom.xml` (ou `build.gradle`). Va jeter un \u0153il, tu y verras toutes les d\xe9pendances que tu as ajout\xe9es. Tu pourras aussi y ajouter d\'autres d\xe9pendances plus tard.\\n\\nEt tu peux d\xe9j\xe0 lancer ton application ! Tu verras, \xe7a ne fait pas grand-chose pour l\'instant. Mais c\'est d\xe9j\xe0 un bon d\xe9but.\\n\\nRegardons un peu ces logs. Tu verras, c\'est tr\xe8s verbeux. Mais c\'est normal. C\'est Spring qui te dit tout ce qu\'il fait. Et c\'est tr\xe8s pratique pour comprendre ce qui se passe. Int\xe9ressons-nous \xe0 quelque lignes en particulier :\\n\\n- Un petit d\'ASCII art qui te dit que c\'est Spring Boot qui d\xe9marre.\\n  ```\\n    .   ____          _            __ _ _\\n   /\\\\\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\\\ \\\\ \\\\ \\\\\\n  ( ( )\\\\___ | \'_ | \'_| | \'_ \\\\/ _` | \\\\ \\\\ \\\\ \\\\\\n   \\\\\\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\\n    \'  |____| .__|_| |_|_| |_\\\\__, | / / / /\\n   =========|_|==============|___/=/_/_/_/\\n   :: Spring Boot ::                (v3.2.2)\\n  ```\\n- Si tu as mis **Spring Boot Devtools**, tu verras une ligne qui te dit que le rechargement \xe0 chaud est activ\xe9 : `LiveReload server is running on port 35729`\\n- Tu verras aussi deux lignes qui te disent que la base de donn\xe9es est d\xe9marr\xe9e. \\n  - `HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:006fa2a9-f721-437e-ad84-dfc02dc70c38 user=SA` pour la connection \xe0 la base de donn\xe9es.\\n  - `H2 console available at \'/h2-console\'. Database available at \'jdbc:h2:mem:3e3e3e3e-3e3e-3e3e-3e3e-3e3e3e3e3e3e\'` pour t\'annoncer que tu peux acc\xe9der \xe0 la base de donn\xe9es \xe0 l\'adresse http://localhost:8080/h2-console. Moi, j\'adore.\\n- Tu verras aussi une ligne qui te dit que le serveur d\'application est d\xe9marr\xe9.\\n  `Tomcat started on port(s): 8080 (http) with context path \'\'`\\n- Et tu verras une ligne qui te dit que l\'application est d\xe9marr\xe9e.\\n  `Started DebuteAvecSpringApplication in 1.5 seconds (JVM running for 2.1)`\\n- Tu verras aussi des lignes qui te disent qu\'Hibernate est lanc\xe9.\\n\\nDu coup, va voir ta base de donn\xe9es ! Tu peux y acc\xe9der \xe0 l\'adresse http://localhost:8080/h2-console, remplis le champ `JDBC URL:` avec l\'url que tu trouves dans les logs, ici `jdbc:h2:mem:006fa2a9-f721-437e-ad84-dfc02dc70c38`. Tu verras que tu as une base de donn\xe9es H2 qui est d\xe9marr\xe9e. Bon, elle est vide, mais c\'est d\xe9j\xe0 un bon d\xe9but.\\n\\nEt tu peux aussi acc\xe9der \xe0 ton application \xe0 l\'adresse http://localhost:8080. Tu verras une belle page d\'erreur. C\'est normal, tu n\'as pas encore de page \xe0 afficher. \\n\\nEt voil\xe0, tu as d\xe9j\xe0 une application Spring qui tourne. Tu peux d\xe9j\xe0 commencer \xe0 coder. On y va ? \\n\\nOk, mais pas maintenant, je vais m\'arr\xeater l\xe0 pour aujourd\'hui. Je te laisse dig\xe9rer tout \xe7a. Et je te donne rendez-vous dans le prochain article pour commencer \xe0 coder et \xe0 configurer ton application.\\n\\n## Pour aller plus loin\\n\\nVoici quelques liens pour approfondir les sujets abord\xe9s dans cet article en attendant le prochain article !\\n\\n- Wikipedia :\\n  - [Java](https://fr.wikipedia.org/wiki/Java_(langage))\\n  - [Kotlin](https://fr.wikipedia.org/wiki/Kotlin_(langage))\\n  - [Groovy](https://fr.wikipedia.org/wiki/Groovy_(langage))\\n  - [Maven](https://fr.wikipedia.org/wiki/Apache_Maven)\\n  - [Gradle](https://fr.wikipedia.org/wiki/Gradle)\\n  - [Spring](https://fr.wikipedia.org/wiki/Spring_Framework)\\n  - [H2 Database](https://fr.wikipedia.org/wiki/H2_(base_de_donn%C3%A9es))\\n- Spring : \\n  - [Spring](https://spring.io/)\\n  - [Spring Initializr](https://start.spring.io/)\\n  - [Spring Boot](https://spring.io/projects/spring-boot)\\n  - [Spring Data JPA](https://spring.io/projects/spring-data-jpa)\\n  - [Spring Web Services](https://spring.io/guides/gs/producing-web-service/)\\n  - [Spring Boot Test](https://spring.io/guides/gs/testing-web/)\\n  - [Spring Boot DevTools](https://docs.spring.io/spring-boot/docs/current/reference/html/using-spring-boot.html#using-boot-devtools)\\n  - [Spring Security](https://spring.io/projects/spring-security)\\n- Les sites officiels :\\n  - [H2 Database](https://www.h2database.com/html/main.html)\\n  - [Lombok](https://projectlombok.org/)\\n  - [Hibernate](https://hibernate.org/)\\n  - [Gradle](https://gradle.org/)\\n  - [Maven](https://maven.apache.org/)\\n  - [Java](https://www.java.com/fr/)\\n  - [Kotlin](https://kotlinlang.org/)\\n  - [Groovy](https://groovy-lang.org/)\\n  - [Cours en ligne OpenClassrooms](https://openclassrooms.com/fr)\\n  - [IntelliJ IDEA](https://www.jetbrains.com/fr-fr/idea/)\\n- Baeldung :\\n  - [Spring](https://www.baeldung.com/spring-tutorial)\\n  - [Spring Boot](https://www.baeldung.com/spring-boot)\\n  - [A Comparison Between Spring and Spring Boot](https://www.baeldung.com/spring-vs-spring-boot)\\n  - [Spring Data JPA](https://www.baeldung.com/the-persistence-layer-with-spring-data-jpa)\\n  - [Spring Web Services](https://www.baeldung.com/spring-webserviceservertest)\\n  - [Spring Boot Test](https://www.baeldung.com/spring-boot-testing)\\n  - [Spring Boot DevTools](https://www.baeldung.com/spring-boot-devtools)\\n\\n## Conclusion\\n\\nJe t\'ai expliqu\xe9 ce qu\'est Spring et pourquoi c\'est un framework incontournable pour un d\xe9veloppeur Java.\\n\\nJe t\'ai expliqu\xe9 comment cr\xe9er une application Spring en quelque minutes gr\xe2ce \xe0 [Spring Initializr](https://start.spring.io/) et je t\'ai m\xeame donn\xe9 des d\xe9pendances pour commencer.\\n\\nJ\'esp\xe8re que tu as appris des choses. Et j\'esp\xe8re que tu as envie d\'en apprendre encore plus. Parce que c\'est pas fini. Et je te donne rendez-vous dans le prochain article pour commencer \xe0 coder et \xe0 configurer ton application.\\n\\nSi tu as envie que j\'explique plus en avant certains concepts ou que je parle de quelque chose en particulier, n\'h\xe9site pas \xe0 me le dire dans les commentaires.\\n\\nEt bon entrainement !"}]}')}}]);